@import "_fonts.scss";
@import "_reset.scss";
@import "_function.scss";

// ----------------------------------------------------
//colors
$primaryColor: #7d7d7d;
$darkColor: #37393f;
$whiteColor: #fff;
$whiteSecondColor: #f4f4f4;
$primaryButtonColor: #6b77e5;
$secondaryButtonColor: #40ddb6;
//varibles
$coreSansC: "Core Sans C", serif;
//template
@mixin button($color: $whiteColor, $bg: $primaryButtonColor) {
	color: $color;
	font-family: "Inter", sans-serif;
	font-size: toRem(18);
	font-weight: 600;
	line-height: 1.22;
	text-transform: capitalize;
	padding: toEm(22, 18) toEm(43, 18);
	background: $bg;
	transition: all 0.3s;
	white-space: nowrap;
	@media (any-hover: hover) {
		&:hover {
			background: $bg;
			@if ($bg==$primaryButtonColor) {
				background: $secondaryButtonColor;
			}
			@if ($bg==$secondaryButtonColor) {
				background: $primaryButtonColor;
			}
			@if ($bg==$darkColor) {
				background: $primaryButtonColor;
			}
		}
	}
}
@mixin subTitlePlusSquad($textColor: $darkColor, $squadColor: $secondaryButtonColor) {
	color: $textColor;
	@include adaptiveValue("font-size", 18, 14);
	font-weight: 500;
	line-height: 1.22;
	display: flex;
	align-items: center;
	gap: 6px;
	&::before {
		content: "";
		width: 12px;
		height: 12px;
		background: $squadColor;
	}
}
@mixin marginBottomNotLast($min: 25, $given: 25) {
	&:not(:last-child) {
		@include adaptiveValue("margin-bottom", $given, $min);
	}
}
// general---------------
.title {
	color: $darkColor;
	font-family: "Poppins", sans-serif;
	@include adaptiveValue("font-size", 40, 28);
	font-weight: 700;
	line-height: 1.21;
}

// ------------
body {
	font-family: "Inter", sans-serif;
	line-height: 1.46;
	color: $primaryColor;
	@media (max-width: toEm(1090.98)) {
		.menu-open & {
			overflow: hidden;
		}
	}
}
.wrapper {
	overflow: clip;
	display: flex;
	flex-direction: column;
	min-height: 100%;
	position: relative;
	> main {
		flex-grow: 1;
	}
	&__bg {
		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
		width: 100%;
		height: 100%;
		object-fit: cover;
		filter: brightness(0.7);
	}
}

[class*="_container"] {
	// задаємо ширину контейнера без одиниць вимірювання в змінну $containerWidth: в _function.scss
	max-width: 1250px;
	padding: 0 15px;
	margin: 0 auto;
}
// ---------------------------------------------

.header {
	background-color: rgba(5, 35, 63, 0.9);
	@include adaptiveValue("margin-bottom", 100, 50);
	position: sticky;
	top: 0;
	left: 0;
	width: 100%;
	&__container {
		display: flex;
		align-items: center;
		justify-content: space-between;
		@include adaptiveValue("gap", 40, 15);
		@include adaptiveValue("padding-top", 20, 10);
		@include adaptiveValue("padding-bottom", 20, 10);
	}
	&__menu {
	}
}
.logo {
	flex: 0 1 toRem(50);
	overflow: hidden;
	border-radius: toRem(10);
	z-index: 4;
	img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
}
.menu {
	display: flex;
	justify-content: flex-end;
	flex: 1 1 auto;
	&__icon {
	}
	&__body {
	}
	&__list {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: flex-end;
		@include adaptiveValue("gap", 50, 15, 0, 768);
	}
	&__item {
	}
	&__link {
		font-size: toRem(22);
		font-weight: 700;
		transition: all 0.3s;
		position: relative;
		&::after {
			content: "";
			position: absolute;
			top: calc(100% + 4px);
			left: 50%;
			width: 0%;
			height: toRem(4);
			background-color: #4e799c;
			transition: all 0.3s;
		}
		@media (min-width: toEm(767.98)) and (hover: hover) {
			&:hover {
				color: #3e88c4;
			}
			&:hover::after {
				left: 0;
				width: 100%;
			}
		}
	}
}
.menu {
	// .menu__icon
	&__icon {
	}
	// .menu__body
	&__body {
		position: relative;
		@media (max-width: toEm(768)) {
			position: fixed;
			width: 100%;
			height: 100%;
			left: -100%;
			top: 0;
			overflow: auto;
			padding: toRem(100) toRem(15) toRem(15) toRem(30);
			transition: left 0.3s;
			background-color: $darkColor;

			&::before {
				border-bottom: toRem(1) solid rgba(238, 238, 238, 0.1);
				content: "";
				position: fixed;
				width: 100%;
				@include adaptiveValue("height", 100, 106);
				height: toRem(70);
				left: -100%;
				top: 0;
				transition: left 0.3s;
				z-index: 2;
				background-color: rgba(5, 35, 63, 1);
			}
			.menu-open & {
				left: 0;
				&::before {
					left: 0;
				}
			}
		}
	}
	// .menu__list
	&__list {
		display: flex;
		gap: toRem(40);
		align-items: center;
		flex-wrap: wrap;
		@media (max-width: toEm(768)) {
			display: flex;
			flex-direction: column;
			row-gap: toRem(20);
			@include adaptiveValue("padding-top", 90, 20);
			align-items: center;
		}
	}
	// .menu__item
	&__item {
	}
	// .menu__link
	&__link {
		@media (max-width: toEm(768)) {
			font-size: toRem(22);
		}
	}
}

//Burger Icon
.icon-menu {
	display: none;
	@media (max-width: toEm(768)) {
		display: block;
		position: relative;
		width: toRem(30);
		height: toRem(18);
		z-index: 5;
		@media (any-hover: none) {
			cursor: default;
		}
		span,
		&::before,
		&::after {
			content: "";
			transition: all 0.3s ease 0s;
			right: 0;
			position: absolute;
			width: 100%;
			height: toRem(2);
			background-color: $whiteColor;
		}
		&::before {
			top: 0;
		}
		&::after {
			bottom: 0;
		}
		span {
			top: calc(50% - toRem(1));
		}
		.menu-open & {
			span {
				width: 0;
			}
			&::before,
			&::after {
			}
			&::before {
				top: calc(50% - toRem(1));
				transform: rotate(-45deg);
			}
			&::after {
				bottom: calc(50% - toRem(1));
				transform: rotate(45deg);
			}
		}
	}
}

// ========================================
.page {
	@include marginBottomNotLast(100, 40);
	&__wowp {
	}
	&__container {
	}
	&__title {
		@extend .title;
		color: $whiteColor;
		text-align: center;
		@include marginBottomNotLast(50, 30);
	}
	&__form {
	}
}
.wowp-bg {
}
.form {
	color: $whiteColor;
	flex-wrap: wrap;
	text-transform: uppercase;
	text-align: center;
	@include marginBottomNotLast(40, 20);

	&__wrap {
		display: flex;
		@include adaptiveValue("gap", 40, 15);
		align-items: flex-end;
		justify-content: center;
		@include marginBottomNotLast(20, 15);
	}
	&__your-score {
		display: flex;
		align-items: center;
		flex-wrap: wrap;
		justify-content: center;
		label {
			width: 100%;
			@include marginBottomNotLast(10, 5);
			font-weight: 700;
		}
		input {
			width: 100%;
			height: toRem(50);
			padding: toRem(10);
			&::placeholder {
				font-size: toRem(12);
			}
		}
	}
	&__best-score {
		@extend .form__your-score;
		label {
		}
	}
	&__button {
		align-self: flex-end;
	}
}
.btn {
	background: #fc6520;
	box-sizing: border-box;
	color: $whiteColor;
	text-align: center;
	padding: 0 toRem(50);
	min-width: toRem(60);
	height: toRem(50);
	text-transform: uppercase;
	transition: all 0.3s;
	@media (min-width: toEm(767.98)) and (hover: hover) {
		&:hover {
			background: rgb(230, 94, 31) 0;
		}
	}
}
.page {
	&__output {
		color: $whiteColor;
	}
}
.output {
	font-size: toRem(20);
	border: 1px solid $whiteColor;
	padding: toRem(10);
	color: $whiteColor;
	@media (min-width: toEm(768.98)) {
		display: flex;
		flex-wrap: wrap;
		@include adaptiveValue("gap", 20, 7);
		justify-content: space-between;
	}
	&__sum {
		display: flex;
		justify-content: space-between;
		gap: 15px;
		align-items: center;
	}
	&__your-score {
		@extend .output__sum;
	}
	&__best-score {
		@extend .output__sum;
	}
	&__koeficient {
		@extend .output__sum;
	}
	&__repley {
		@extend .output__sum;
	}
	span {
		font-size: 24px;
		color: #fc6520;
		font-weight: 700;
		text-shadow: 0px 0px 7px #000000;
		@media (min-width: toEm(768.98)) {
			justify-self: flex-end;
		}
	}
}

// ============================================
.footer {
	&__copy {
		text-align: center;
		color: $whiteSecondColor;
	}
}
